import socket
import signal
import threading
from typing import Optional

from ..use_cases.process_udp_packet import process_packet
from ..utils.model_loader import load_model
from ..infrastructure.depth_estimator import DepthEstimator

_shutdown_event = threading.Event()
_cache = {}


def _signal_handler(signum, frame):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞"""
    print(
        f"\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signal.Signals(signum).name}. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å–µ—Ä–≤–µ—Ä...")
    _shutdown_event.set()


def run_udp_server(host: str = "0.0.0.0", port: int = 9999):
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç UDP-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–∏—ë–º–∞ –∫–∞–¥—Ä–æ–≤, –¥–µ—Ç–µ–∫—Ü–∏–∏ –º–æ—Å—Ç–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.
    –°–µ—Ä–≤–µ—Ä –º–æ–∂–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ Ctrl+C
    """
    signal.signal(signal.SIGINT, _signal_handler)  # Ctrl+C

    detection_model = load_model()
    depth_estimator = DepthEstimator()

    print("üß† –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

    sock: Optional[socket.socket] = None
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        sock.bind((host, port))
        print(f"üöÄ UDP API –∑–∞–ø—É—â–µ–Ω –Ω–∞ {host}:{port}")

        while not _shutdown_event.is_set():
            sock.settimeout(1.0)
            try:
                data, addr = sock.recvfrom(65507)
                print(f"üì© –ü–æ–ª—É—á–µ–Ω–æ {len(data)} –±–∞–π—Ç –æ—Ç {addr}")

                response = process_packet(
                    data, detection_model, depth_estimator, cache=_cache)
                sock.sendto(response, addr)
            except socket.timeout:
                continue
            except Exception as e:
                if _shutdown_event.is_set():
                    break
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏—ë–º–∞: {e}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
    finally:
        if sock:
            sock.close()
        print("üõë UDP —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –†–µ—Å—É—Ä—Å—ã –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω—ã.")
        _shutdown_event.clear()
